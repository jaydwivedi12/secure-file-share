import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router";
import generateQR from "../utils/generateQR";
import Loader from "./loader";
import { useAuth } from "../contexts/AuthContext";
import {
  Card,
  CardHeader,
  CardTitle,
  CardContent,
  CardFooter,
} from "@/components/ui/card";
import { Input } from "@/components/ui/input";
import { Button } from "@/components/ui/button";
import api from "../services/apiConfig";
import { toast } from "react-toastify";
import { MotionDiv } from "@/utils/motionConfig";

const TwoFactorAuthGeneration = ({ twoFA_setup }) => {
  const [qrCode, setQrCode] = useState("");
  const [loading, setLoading] = useState(true); // State to handle loader
  const [verificationCode, setVerificationCode] = useState("");
  const { totp_uri, email } = twoFA_setup || {};

  const navigate = useNavigate();
  const { login } = useAuth();

  useEffect(() => {
    if (totp_uri) {
      // Generate QR code from the TOTP URI
      const generateQRCode = async () => {
        setLoading(true); // Show loader
        const qrCodeDataUrl = await generateQR(totp_uri);
        setQrCode(qrCodeDataUrl);
        setLoading(false); // Hide loader
      };
      generateQRCode();
    }
  }, [totp_uri]);
  console.log(qrCode);

  const handleWrongEnteredEmail = () => {
    window.location.href = "/signup";
    localStorage.removeItem("isGenerate2FA");
    localStorage.removeItem("twoFA_setup");
  };

  const handleVerifyCode = async () => {
    try {
      const response = await api.post("/auth/verify2fa/", {
        email,
        token: verificationCode,
      });
      if (response.status === 200) {
        toast.success("2FA setup verified successfully!");
        const userData = response.data;
        login(userData);
        navigate(
          userData.role === "admin" ? "/admin-dashboard" : "/user-dashboard"
        );
        localStorage.removeItem("isGenerate2FA");
        localStorage.removeItem("twoFA_setup");
      }
    } catch (error) {
      console.error("Verification failed:", error);
      toast.error(
        error.response?.data?.message || "Failed to verify the code."
      );
    }
  };

  return (
    <MotionDiv className="flex flex-col items-center justify-center min-h-screen bg-stone-50">
      <Card className="bg-white rounded-xl shadow-lg p-6 max-w-md">
        <CardHeader>
          <CardTitle className="text-center text-xl">
            Enable Two-Factor Authentication
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-6">
            <div>
              <h2 className="font-semibold">
                Step 1: Set Up Your Authenticator App
              </h2>
              <p className="text-sm text-gray-600">
                Open your authenticator app (e.g., Google Authenticator, Authy)
                scan the QR code
              </p>
              {loading ? (
                <Loader /> // Show the loader while QR code is being generated
              ) : (
                <img
                  src={qrCode}
                  alt="QR Code"
                  className="mx-auto mt-4 w-48 h-48"
                />
              )}
            </div>
            <div>
              <h2 className="font-semibold">Step 2: Verify the Code</h2>
              <p className="text-sm text-gray-600">
                Enter the 6-digit code generated by your authenticator app
                below.
              </p>
              <Input
                type="text"
                inputMode="numeric"
                maxLength={6}
                value={verificationCode}
                onChange={(e) => setVerificationCode(e.target.value)}
                className="w-full mt-2 text-center text-lg font-semibold border rounded focus:outline-none focus:ring-2 focus:ring-blue-500"
                placeholder="Enter 6-digit code"
              />
            </div>
          </div>
        </CardContent>
        <CardFooter>
          <Button
            onClick={handleVerifyCode}
            className="w-full py-3 bg-black text-white rounded-md font-semibold hover:bg-gray-800 transition duration-200"
            disabled={verificationCode.length !== 6}
          >
            Verify Code
          </Button>
        </CardFooter>
        <p className="text-sm text-gray-600 text-center mt-2">
          {email}
          <span
            onClick={handleWrongEnteredEmail}
            className="text-blue-500 cursor-pointer hover:underline ml-1"
          >
            wrong email?
          </span>
        </p>
      </Card>
    </MotionDiv>
  );
};

export default TwoFactorAuthGeneration;
