events {
    worker_connections 1024;
}

http {
    upstream backend {
        server django:8000;
    }

    upstream frontend {
        server frontend:3000;
    }

    include /etc/nginx/mime.types;

    server {
        listen 80;
        server_name localhost;
        return 301 https://$server_name$request_uri;
    }

    # map $http_origin $cors_origin {
    #     default "";
    #     "https://localhost:3000" "$http_origin";
    #     "https://localhost" "$http_origin";
    # }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate /etc/nginx/ssl/certificate.crt;
        ssl_certificate_key /etc/nginx/ssl/private.key;

        # SSL configuration
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # Frontend
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;

        }

        # Backend API
        location /api/ {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cookie_path / "/; Secure; SameSite=Lax";

        
        # # CORS headers
        # add_header 'Access-Control-Allow-Origin' '*' always;
        # add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        # add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,X-CSRFToken' always;

        # # Preflight
        # if ($request_method = 'OPTIONS') {
        #     add_header 'Access-Control-Allow-Origin' '*' always;
        #     add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        #     add_header 'Access-Control-Allow-Headers' 'Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With,X-CSRFToken' always;
        #     add_header 'Access-Control-Max-Age' 1728000;
        #     add_header 'Content-Type' 'text/plain charset=UTF-8';
        #     add_header 'Content-Length' 0;
        #     return 204;
        # }
    }

        # Backend static files
        location /static/ {
            alias /app/static/;
        }

        # Backend media files
        location /media/ {
            alias /app/media/;
        }
    }
}